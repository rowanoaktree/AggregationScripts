####
# Creator: Rowan Converse (rowanconverse@unm.edu)
# Date: 2022/08/02
# Purpose: Translate raw labels generated by USFWS biologists in Labebox into COCO format for public release 
# Ref COCO Camera Trap Standard: https://cocodataset.org/#format-data
####
import json
from unicodedata import name
from matplotlib.font_manager import json_dump
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import datetime
from collections import OrderedDict 

#Load JSON file of Labelbox labels
path = "/Users/rowanconverse/Library/CloudStorage/OneDrive-UniversityofNewMexico/CV4Ecology/Github/AggregationScripts/Data/labelbox.json"
with open(path) as f:
  usfws = json.load(f)

####Info: 
whattimeisitrightnowdotcom = datetime.date.today()
year = {"year": 2022}
vers = {"version": "1.0"}
desc = {"description": "This dataset includes annotations of UAS imagery collected x to y , 2018, at Bosque del Apache National Wildlife Refuge in New Mexico. Fifteen biologists from the US Fish and Wildlife Service identified waterfowl in thirteen benchmark images to the species level. Contact Rowan Converse (rowanconverse@unm.edu) with questions about this dataset. Please cite using a CC-By license with ASPIRE as the data repository."}
contr = {"contributor": "Center for the Advancement of Spatial Informatics Research and Education (ASPIRE), University of New Mexico; Project Manager Rowan Converse"}
url = {"url": "https://aspire.unm.edu/projects/project/ducks-and-drones.html"}
date = {"date created": whattimeisitrightnowdotcom}

infolist = [year, vers, desc, contr, url, date]

info = {"info": infolist}

####Images:

#Derive list of images
for i in range(len(usfws)):
  imglist = list(set(img['External ID'] for img in usfws))

#Add unique IDs to each filename
imgIDs = [{v: k for k, v in enumerate(
   OrderedDict.fromkeys(imglist), 1)}
      [n] for n in imglist]
img = dict(zip(imgIDs, imglist))

#####Annotations: 
#import ID, Image ID, Category ID, segmentation, area, bounding box (x,y, width, height), is crowd (0 or 1)
annos = []

#categories: use code for species list (name), match with integer values (id) (NOT ZERO)
spplist = []
for i in range(len(usfws)):
  if usfws[i]["Label"] == "Skip":
    continue
  cur_species = list(usfws[i]["Label"].keys())
  spplist.extend(cur_species)
sppIDs = [{v: k for k, v in enumerate(
   OrderedDict.fromkeys(spplist), 1)}
      [n] for n in spplist]
cat = dict(zip(sppIDs, spplist))
categories = {"categories": cat}
categories

#also add labeler info
userlist = list(set(user['Created By'] for user in usfws))
userIDs = [{v: k for k, v in enumerate(
   OrderedDict.fromkeys(userlist), 1)}
      [n] for n in userlist]
lbldict = dict(zip(userIDs, userlist))
labelers = {"labelers": lbldict}

#License
lic_id = {"id": 1} 
lic_name = {"name": "Creative Commons (CC)-BY"}
lic_url = {"url": "https://creativecommons.org/about/cclicenses/"}
licenselist = [lic_id, lic_name, lic_url]
license = {"license": licenselist}

#Finally, merge all the dictionaries into one JSON file and save it to the data directory
usfwscoco = json_dump(info, img, annos, license)